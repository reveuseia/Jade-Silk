// Generated by view binder compiler. Do not edit!
package com.example.puffandpoof.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.puffandpoof.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DollListTransactionBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonUpdate;

  @NonNull
  public final CardView carddoll;

  @NonNull
  public final TextView date;

  @NonNull
  public final EditText editTextQuantity;

  @NonNull
  public final TextView quantity;

  @NonNull
  public final TextView ttldol;

  private DollListTransactionBinding(@NonNull CardView rootView, @NonNull Button buttonDelete,
      @NonNull Button buttonUpdate, @NonNull CardView carddoll, @NonNull TextView date,
      @NonNull EditText editTextQuantity, @NonNull TextView quantity, @NonNull TextView ttldol) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonUpdate = buttonUpdate;
    this.carddoll = carddoll;
    this.date = date;
    this.editTextQuantity = editTextQuantity;
    this.quantity = quantity;
    this.ttldol = ttldol;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DollListTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DollListTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doll_list_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DollListTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDelete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonUpdate;
      Button buttonUpdate = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpdate == null) {
        break missingId;
      }

      CardView carddoll = (CardView) rootView;

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.editTextQuantity;
      EditText editTextQuantity = ViewBindings.findChildViewById(rootView, id);
      if (editTextQuantity == null) {
        break missingId;
      }

      id = R.id.quantity;
      TextView quantity = ViewBindings.findChildViewById(rootView, id);
      if (quantity == null) {
        break missingId;
      }

      id = R.id.ttldol;
      TextView ttldol = ViewBindings.findChildViewById(rootView, id);
      if (ttldol == null) {
        break missingId;
      }

      return new DollListTransactionBinding((CardView) rootView, buttonDelete, buttonUpdate,
          carddoll, date, editTextQuantity, quantity, ttldol);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
